//brute force technique for string matching
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define n1 10
#define n2 100

int cnt=0;

int strm( char *text , char *pat)
{
int n = strlen(text);
int m = strlen(pat);
int i,j;
for(i=0;i<n-m;i++)
{
for(j=0;j<m;j++)
{
cnt++;
if(text[i+j]!=pat[j])
break;
}
if(j==m)
return i;}
return -1;
}
void main(){
FILE *f1,*f2,*f3;
int n,key;
f1=fopen("bc.txt", "a");
f2=fopen("ac.txt", "a");
f3=fopen("wc.txt", "a");
for(n=n1;n<=n2;n+=10)
{
char *t=(char*)malloc(101*sizeof(char));
char *p=(char*)malloc(n*sizeof(char));
for(int i=0;i<100;i++)
t[i]='a';
t[100]='\0';

//best case
for(int i=0;i<n;i++)
p[i]='a';
p[n]='\0';
cnt=0;
key=strm(t,p);
printf("%d",cnt);
fprintf(f1,"%d\t%d\n",n,cnt);

//avg case
p[n/2]='b';
cnt=0;
key=strm(t,p);
fprintf(f2,"%d\t%d\n",n,cnt);

//worst case 
p[n/2]='a';
p[n-1]='b';
cnt=0;
key=strm(t,p);
fprintf(f3,"%d\t%d\n",n,cnt);
}

system("gnuplot > load 'commands.txt'");
fclose(f1);
fclose(f2);
fclose(f3);
}






